<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Blockpy/Kennel/Silicon</title>
    
    <!-- Style sheets -->
    <link rel="stylesheet" href="libs/bootstrap.min.css">
    <link rel="stylesheet" href="libs/codemirror/codemirror.css">
    <link rel="stylesheet" href="libs/font-awesome.min.css">
    <link rel="stylesheet" href="libs/summernote/summernote.css">
    <link rel="stylesheet" href="kennel/kennel.css">
    
    <!-- JQuery, D3, Math.js, Bootstrap -->
    <script type="text/javascript" src="libs/jquery.js"></script>
    <script type="text/javascript" src="libs/jquery.hotkeys.js"></script>
    <script type="text/javascript" src="libs/d3.min.js"></script>
    <script type="text/javascript" src="libs/math.0.19.0.min.js"></script>
    <script type="text/javascript" src="libs/bootstrap.min.js"></script>
    <script type="text/javascript" src="libs/bootstrap-wysiwyg.js"></script>
    <script type="text/javascript" src="libs/mindmup-editabletable.js"></script>
    <script type="text/javascript" src="libs/codemirror/codemirror.js"></script>
    <script type="text/javascript" src="libs/codemirror/python.js"></script>
    <script type="text/javascript" src="libs/codemirror/htmlmixed.js"></script>
    <script type="text/javascript" src="libs/codemirror/xml.js"></script>
    
    <!-- Summernote, a rich text editor -->
    <script type="text/javascript" src="libs/summernote/summernote.min.js"></script>
    <script type="text/javascript" src="libs/summernote/summernote-ext-hint.js"></script>
    <script type="text/javascript" src="libs/summernote/summernote-ext-video.js"></script>
    
    <!-- Datasets -->
    <script type="text/javascript" src="libs/crime_data.js"></script>
    
    <!-- Blockly -->
    <script type="text/javascript" src="blockly/blockly_compressed.js"></script>
    <script type="text/javascript" src="blockly/blocks_compressed.js"></script>
    <script type="text/javascript" src="blockly/python_compressed.js"></script>
    <script type="text/javascript" src="blockly/javascript_compressed.js"></script>
    <script type="text/javascript" src="blockly/msg/js/en.js"></script>
    
    <!-- Skulpt -->
    <script type="text/javascript" src="skulpt/dist/skulpt.min.js"></script>
    <script type="text/javascript" src="skulpt/dist/skulpt-stdlib.js"></script>
    
    <!-- Analyzer -->
    <script type="text/javascript" src="analyzer/analyzer.js"></script>
    <script type="text/javascript" src="analyzer/python_errors.js"></script>
    
    <!-- Converter -->
    <script type="text/javascript" src="converter/reverse_ast.js"></script>
    <script type="text/javascript" src="converter/python_to_blockly.js"></script>
    
    <!-- Analyzer -->
    <script type="text/javascript" src="kennel/kennel.js"></script>
    
    <!-- Renderer -->
    <script type="text/javascript" src="converter/renderBlocklyToPng.js"></script>
    
</head>

<body>
<div id="kennel-div" style='height:100%'></div>

<div class='row'>
    <div class='col-md-3 col-sm-3 col-xs-3'>
        <img src='images/blockly-corgi-logo.png'  class='img-responsive' />
    </div>
    <div class='col-md-9 col-sm-9 col-xs-9'>
        The tool above is from Virginia Tech's Software Innovations Lab. By Austin Cory Bart, Dennis Kafura, Eli Tilevich, and Clifford A. Shaffer. Interested in this project as it develops? Get in touch with <a href='mailto:acbart@vt.edu'>acbart@vt.edu</a>. Help us think of a name for it! 
    </div>
</div>

<script>
function getQueryParams(){
    try{
        url = window.location.href;
        query_str = url.substr(url.indexOf('?')+1, url.length-1);
        r_params = query_str.split('&');
        params = {}
        for( i in r_params){
            param = r_params[i].split('=');
            params[ param[0] ] = param[1];
        }
        return params;
    }
    catch(e){
       return {};
    }
}
$(document).ready(function() {
    var params = getQueryParams();
    if (localStorage.getItem('__main__') === null) {
        body = $("#default-body").text();
    } else {
        body = localStorage.getItem('__main__');
    }
    body = $("#default-body").text();
    var view = "blocks";
    if ("view" in params) {
        if (params["view"] == "text") {
            view = "text";
        } else if (params["view"] == "blocks") {
            view = "blocks";
        } else {
            console.log("Unknown view:", params["view"]);
            view = "blocks";
        }
    }
    var mode = "student";
    if ("mode" in params) {
        if (params["mode"] == "student") {
            mode = "student";
        } else if (params["mode"] == "instructor") {
            mode = "instructor";
        }
    } 
    kennel = new Kennel(document.getElementById('kennel-div'),
                        mode, // Instructor mode
                        $("#problem-presentation").text(), // problem
                        body, // Current code
                        $('#default-on-run').html(), // On run code
                        "def on_step(code, output, properties):\n    pass", // On step code
                        "alpha = 0", // Starting code
                        mode == "instructor",
                        view,
                        'blockly/'
                        );
    if ("url" in params) {
        $.get(decodeURIComponent(params["url"]), function(result) { kennel.setCode(result);});   
    }
  });
</script>
<pre id='problem-presentation' style='display:none'>
<%= @problem_presentation %>
</pre>
<pre id='default-body' style='display:none'>
<%= @program_code %>
</pre>
<pre id='default-on-run' style='display:none'>
<%= @program_on_run %>
</pre>
  
<!-- Google Analytics -->
<script>
switch(window.location.protocol) {
case 'file:':
    break;
default:
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-38802329-2', 'auto');
    ga('send', 'pageview');
    }
</script>

</body>
</html>

<script>
  var TP = TP || {};
  <% if defined? @tp %>
  <% if @tp.outcome_service? %>
	  TP.outcomeService = true;
  <% else %>
  	TP.outcomeService = false;
  <% end %>
  TP.toParams = {};
  TP.toParams.launch_params = {};
  <% @tp.to_params.each do |key, value| %>
    TP.toParams.launch_params.<%= key %> = "<%= value %>";
  <% end %>
  <% end %>
</script>
