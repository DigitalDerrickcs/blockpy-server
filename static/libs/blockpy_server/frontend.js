var frontend;frontend=(()=>{"use strict";var e={460:(e,t,s)=>{s.r(t),s.d(t,{Assignment:()=>L,AssignmentGroup:()=>S,GroupList:()=>I,Server:()=>Q,User:()=>w,Watcher:()=>W,dateCreatedSorter:()=>f,launchEditor:()=>V});const i=ko,n=CodeMirror,a=hljs;function o(e,t){let s=e();return e.valueWillMutate(),i.utils.arrayPushAll(s,t),e.valueHasMutated(),e}i.bindingHandlers.codemirror={init:function(e,t){let s=i.unwrap(t());e.editor=n(e,i.toJS(s)),e.editor.on("change",(function(e){s.readOnly||s.value(e.getValue())})),i.utils.domNodeDisposal.addDisposeCallback(e,(function(){let t=e.editor.getWrapperElement();t.parentNode.removeChild(t)}))},update:function(e,t){let s=i.toJS(t()).value;if(e.editor){let t=e.editor.getCursor();e.editor.setValue(s),e.editor.setCursor(t),e.editor.refresh()}}},a.configure({languages:["python"]}),i.bindingHandlers.highlightedCode={update:function(e,t){let s=i.unwrap(t());e.innerHTML=s,a.highlightBlock(e),s.trim()&&a.lineNumbersBlock(e)}};class r{constructor(e){this.map=new Map,this.lefts=[],this.rights=[];for(let t in e)this.lefts.push(t),this.rights.push(e[t]),this.map.set(t,e[t]),this.map.set(e[t],t)}get(e){return this.map.get(e)}}function d(e){return e[e.length-1]}function l(e,t){return $.get(window.$URL_ROOT+e,t)}i.bindingHandlers.multiselect={init:function(e,t,s){let n=t();i.bindingHandlers.options.update(e,(()=>n.options),s),i.bindingHandlers.selectedOptions.init(e,(()=>n.selectedOptions),s),i.bindingHandlers.selectedOptions.update(e,(()=>n.selectedOptions),s),$(e).multiSelect(n.config),$(e).multiSelect({afterSelect:function(e){for(let t=0;t<e.length;t+=1)n.selectedOptions.push(e[t])},afterDeselect:function(e){for(let t=0;t<e.length;t+=1)n.selectedOptions.remove(e[t])}})},update:function(e,t,s){let n=t();console.log(n.options(),n.selectedOptions()),i.bindingHandlers.selectedOptions.update(e,(()=>n.selectedOptions),s),n.options().forEach((t=>{$(e).multiSelect("addOption",{value:t.id,text:t[n.optionsText]()})})),$(e).multiSelect("refresh")}},i.bindingHandlers.option={update:function(e,t){let s=i.utils.unwrapObservable(t());i.selectExtensions.writeValue(e,s)}};const c=["Jan","Feb","Mar","Apr","May","June","July","Aug","Sept","Oct","Nov","Dec"],u=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];function h(e,t){return e.getDate()===t.getDate()&&e.getMonth()===t.getMonth()&&e.getFullYear()===t.getFullYear()}function m(e){if(void 0===e)return"Undefined Time";let t=new Date,s=new Date(e);if(h(t,s))return"Today at "+s.toLocaleTimeString();{let e=u[s.getDay()]+", "+c[s.getMonth()]+" "+s.getDate();return t.getFullYear()===s.getFullYear()?e+" at "+s.toLocaleTimeString():e+", "+s.getFullYear()+" at "+s.toLocaleTimeString()}}function b(e){if(void 0===e)return"Undefined Time";let t=new Date,s=new Date(parseInt(e,10));if(h(t,s))return"Today";{let e=u[s.getDay()]+", "+c[s.getMonth()]+" "+s.getDate();return t.getFullYear()===s.getFullYear()?e:e+", "+s.getFullYear()}}function p(e,t){if(null===e)return"Never";let s=new Date(parseInt(e,10)),i=null===t?new Date:new Date(parseInt(t,10)),n=Math.abs(i.getTime()-s.getTime())/1e3,a=i.getTime()>s.getTime()?" earlier":" later",o=Math.floor(n/31536e3),r=Math.floor(n%31536e3/86400),d=Math.floor(n%86400/3600),l=Math.floor(n%3600/60),c=Math.floor(n%60),u=`${r} day${1!==r?"s":""}`,h=`${d} hour${1!==d?"s":""}`,m=`${l} minute${1!==l?"s":""}`,b=`${c} second${1!==c?"s":""}`;return n<1?"At this time":n<60?b+a:n<600?m+", "+b+a:n<3600?m+a:n<86400?h+", "+m+a:n<31536e3?u+", "+h+a:`${o} year${1!==o?"s":""}, `+u+a}class g{constructor(e){this.FIELDS=new r({date_modified:"dateModified",date_created:"dateCreated"}),this.id=e.id,this.dateModified=i.observable(e.date_modified),this.dateCreated=i.observable(e.date_created),this.prettyDateCreated=i.pureComputed((()=>m(this.dateCreated()))),this.prettyDateModified=i.pureComputed((()=>m(this.dateModified())))}fromJson(e){this.FIELDS.lefts.forEach((t=>{this[this.FIELDS.get(t)](e[t])}))}koFromJson(e){this.FIELDS.lefts.forEach((t=>{this[this.FIELDS.get(t)]=i.observable(e[t])}))}toJson(){let e={id:this.id};return this.FIELDS.rights.forEach((t=>e[this.FIELDS.get(t)]=this[t]())),e}}function f(e,t){return e.dateCreated()===t.dateCreated()?0:e.dateCreated()<t.dateCreated()?-1:1}class v{constructor(e,t,s,i){this.data={},this.server=e,this.courseId=t,this.delayedData=[],this.timer=null,void 0!==i&&i.map((e=>this.newInstance(e))),void 0!==s&&s.map((e=>this.getInstance(e)))}getInstance(e){if(void 0!==this.data[e])return this.data[e];{let t=this.makeEmptyInstance(e);return this.delayLoadInstance(t),this.data[e]=t,t}}delayLoadInstance(e){clearTimeout(this.timer),this.delayedData.push(e),this.queueFinishDelay()}queueFinishDelay(){this.delayedData.length>25?this.finishDelayedLoads():this.delayedData.length>0&&(this.timer=window.setTimeout(this.finishDelayedLoads.bind(this),1e3))}getInstances(e){return e.map(this.getInstance.bind(this))}getLoaded(){return Object.keys(this.data).map((e=>this.data[e]))}getAllAvailable(){let e=this.getPayload(),t=this.getUrl();return new Promise(((s,i)=>{l(t,e).then((e=>{if(e.success){let t=e[this.GET_FIELD].map((e=>this.newInstance(e)));s(this.cleanData(t))}else i(e)}))}))}cleanData(e){return e}trackInstance(e){return this.data[e.id]=e,e}newInstance(e){return this.data[e.id]=this.makeEmptyInstance(e.id),this.data[e.id].fromJson(e),this.data[e.id]}sortMethod(e,t){return 0}finishDelayedLoads(){let e=this.getPayload(),t=this.getUrl();return this.delayedData.length=0,l(t,e).then((e=>{if(e.success){let t=e[this.GET_FIELD].map((e=>(this.data[e.id].fromJson(e),e.id)));this.removeDelayedInstances(t)}else console.error(e)}))}getDelayedIds(){return this.delayedData.map((e=>e.id))}removeDelayedInstances(e){this.delayedData=this.delayedData.filter((t=>!e.includes(t.id))),this.queueFinishDelay()}}class S extends g{constructor(e){super(e),this.FIELDS=new r({name:"name",url:"url",position:"position",forked_id:"forkedId",forked_version:"forkedVersion",owner_id:"ownerId",course_id:"courseId",version:"version",date_modified:"dateModified",date_created:"dateCreated"}),this.koFromJson(e)}}class y extends v{constructor(){super(...arguments),this.GET_FIELD="assignment_groups"}getPayload(){return{assignment_group_ids:this.getDelayedIds().join(","),course_id:this.courseId}}getUrl(){return"assignment_groups/get_ids"}makeEmptyInstance(e){return new S({id:e,date_created:null,date_modified:null,name:"Unknown",url:"",position:0,forked_id:0,forked_version:0,owner_id:0,course_id:0,version:0})}getLocalStorageKey(){return`BLOCKPY_COURSE_${this.courseId}_ASSIGNMENT_GROUPS`}}i.components.register("assignment-group",{viewModel:S,template:'\n    <div>Assignment Group: <span data-bind="text: name"></span></div>\n'});class I{constructor(){this.groups=i.observableArray([]),$().ready((()=>this.load()))}load(){l("get/",{course_id:3}).then((e=>{this.groups(e.groups.map((e=>new S(e))))}))}}i.components.register("group-list",{viewModel:I,template:'\n    <div>Groups:\n        <div data-bind="foreach: groups">\n            <div data-bind="component: {name: \'assignment-group\', params: $data}"></assignment-group>\n        </div>\n    </div>\n'});class _ extends g{constructor(e){super(e),this.FIELDS=new r({user_id:"userId",course_id:"courseId",name:"name",date_modified:"dateModified",date_created:"dateCreated"}),this.koFromJson(e)}}class w extends g{constructor(e){super(e),this.FIELDS=new r({email:"email",first_name:"firstName",last_name:"lastName"}),this.koFromJson(e),this.name=i.pureComputed((()=>this.firstName()+" "+this.lastName()),this),this.primaryRole=i.pureComputed((()=>this.roles().length?this.roles().map((e=>function(e){let t=e.split("/");return"string"!=typeof(s=e=t[t.length-1])?"":s.charAt(0).toUpperCase()+s.slice(1);var s}(e.name()))).join("/"):"User"),this),this.title=i.pureComputed((()=>{if(!this.displayMode)return this.name();switch(this.displayMode()){case E.LAST_FIRST:return this.lastName()+", "+this.firstName();case E.EMAIL:return this.email();case E.BLOCKPY_ID:return""+this.id;default:case E.FIRST_LAST:return this.name()}}),this)}koFromJson(e){super.koFromJson(e);let t=[];e.roles&&(t=e.roles.map((e=>new _(e)))),this.roles=i.observableArray(t)}fromJson(e){super.fromJson(e),this.roles.removeAll(),e.roles&&e.roles.forEach((e=>this.roles.push(new _(e))))}toJson(){let e=super.toJson();return e.roles=this.roles().map((e=>e.toJson())),e}}var E;!function(e){e.FIRST_LAST="First name last name",e.LAST_FIRST="Last name, first name",e.EMAIL="Email",e.BLOCKPY_ID="Internal BlockPy ID"}(E||(E={}));class M extends v{constructor(e,t,s,n){super(e,t,s,n),this.GET_FIELD="users",this.sortMode=i.observable(localStorage.getItem("BLOCKPY_COURSE_USER_SORT_MODE")||E.FIRST_LAST),this.displayMode=i.observable(localStorage.getItem("BLOCKPY_COURSE_USER_DISPLAY_MODE")||E.FIRST_LAST),this.sortMode.subscribe((()=>{localStorage.setItem("BLOCKPY_COURSE_USER_SORT_MODE",this.sortMode())})),this.displayMode.subscribe((()=>{localStorage.setItem("BLOCKPY_COURSE_USER_DISPLAY_MODE",this.displayMode())})),this.displayOptions=Object.values(E)}sortMethod(e,t){switch(this.sortMode()){case E.FIRST_LAST:return e.firstName()===t.firstName()?e.lastName().localeCompare(t.lastName()):e.firstName().localeCompare(t.firstName());case E.LAST_FIRST:return e.lastName()===t.lastName()?e.firstName().localeCompare(t.firstName()):e.lastName().localeCompare(t.lastName());case E.BLOCKPY_ID:return e.id-t.id;default:case E.EMAIL:return e.email().localeCompare(t.email())}}cleanData(e){return e.sort(this.sortMethod.bind(this))}getPayload(){return{user_ids:this.getDelayedIds().join(","),course_id:this.courseId}}getUrl(){return"courses/users"}getLocalStorageKey(){return`BLOCKPY_COURSE_${this.courseId}_USERS`}makeEmptyInstance(e){let t=new w({id:e,email:"",date_created:null,date_modified:null,first_name:"",last_name:"Unknown"});return t.displayMode=this.displayMode,t}}i.components.register("user",{viewModel:w,template:'\n    <div>User: <span data-bind="text: title"></span></div>\n'}),i.components.register("user-short",{template:'\n    <div><span data-bind="text: primaryRole"></span>: <span data-bind="text: title"></span></div>\n'}),i.components.register("user-display-settings-editor",{template:'\n<div>\n    <button class="btn btn-outline-secondary btn-sm float-right" type="button"\n            data-toggle="collapse" data-target="#user-display-settings"\n            aria-expanded="false" aria-controls="collapseExample">\n        User Settings <span class="fas fa-expand-arrows-alt"></span>\n    </button>\n    <div id="user-display-settings" class="collapse">\n    <form>\n        <div class="card card-body">\n        <div class="form-group row">\n            <label class="col-sm-4 col-form-label" for="display-mode-select">\n                Render user names as: \n            </label>\n            <div class="col-sm-8">\n                <select id="display-mode-select" class="custom-select" data-bind="options: options, value: displayMode"></select>\n            </div>\n        </div>\n        <div class="form-group row">\n            <label class="col-sm-4 col-form-label" for="sort-mode-select">\n                Sort user names as: \n            </label>\n            <div class="col-md-8">\n                <select id="sort-mode-select" class="custom-select" data-bind="options: options, value: sortMode"></select>\n            </div>\n        </div>\n        </div>\n    </div>\n    </form>\n</div>\n'});class L extends g{constructor(e){super(e),this.FIELDS=new r({name:"name",url:"url",type:"type",instructions:"instructions",reviewed:"reviewed",hidden:"hidden",public:"public",ip_ranges:"ipRanges",settings:"settings",on_run:"onRun",on_change:"onChange",on_eval:"onEval",starting_code:"startingCode",extra_instructor_files:"extraInstructorFiles",extra_starting_files:"extraStartingFiles",forked_id:"forkedId",forked_version:"forkedVersion",owner_id:"ownerId",course_id:"courseId",version:"version",date_modified:"dateModified",date_created:"dateCreated"}),this.group=i.observable(null),this.koFromJson(e),this.title=i.pureComputed((()=>"maze"===this.type().toLowerCase()?"Maze "+this.name():this.name()),this)}}class k extends v{constructor(){super(...arguments),this.GET_FIELD="assignments"}getPayload(){return{assignment_ids:this.getDelayedIds().join(","),course_id:this.courseId}}getUrl(){return"assignments/get_ids"}makeEmptyInstance(e){return new L({id:e,date_created:null,date_modified:null,name:"Unknown",url:"",type:"unknown",instructions:"",reviewed:!1,hidden:!1,public:!1,ip_ranges:"",settings:"",on_run:"",on_change:"",on_eval:"",starting_code:"",extra_instructor_files:"",extra_starting_files:"",forked_id:0,forked_version:0,owner_id:0,course_id:0,version:0})}getLocalStorageKey(){return`BLOCKPY_COURSE_${this.courseId}_ASSIGNMENTS`}getAllAvailable(){let e=this.getPayload(),t=this.getUrl();return new Promise(((s,i)=>{l(t,e).then((e=>{if(e.success){let t=e.assignments,i=e.groups,n=[];for(let e=0;e<t.length;e+=1){let s=this.newInstance(t[e]);if(null!==i[e]){let t=this.server.assignmentGroupStore.newInstance(i[e]);s.group(t)}n.push(s)}s(n)}else i(e)}))}))}}i.components.register("assignment",{viewModel:L,template:'\n    <div>Assignment: <span data-bind="text: name"></span></div>\n'}),i.components.register("assignment-short",{template:'\n    <div>Assignment: <span data-bind="text: name"></span> (<span data-bind="text: url"></span>)</div>\n'});class x extends g{constructor(e){super(e),this.FIELDS=new r({date_modified:"dateModified",date_created:"dateCreated",assignment_id:"assignmentId",assignment_version:"assignmentVersion",course_id:"courseId",subject_id:"subjectId",event_type:"eventType",file_path:"filePath",category:"category",label:"label",message:"message",client_timestamp:"clientTimestamp",client_timezone:"clientTimezone"}),this.koFromJson(e)}getAsSubmissionKey(){return[this.courseId(),this.subjectId(),this.assignmentId()].join(",")}isEditEvent(){return"File.Edit"===this.eventType()||"File.Create"===this.eventType()}when(){return this.clientTimestamp()||this.dateCreated()}}const T={"Session.Start":"Began session","X-IP.Change":"Changed IP address","File.Edit":"Edited code","File.Create":"Started assignment","Run.Program":"Ran program","Compile.Error":"Syntax error","X-Submission.LMS":"Updated grade"};class A{constructor(e){this.name=i.observable(e.name),this.ids=i.observableArray(e.ids),this.default=i.observable(e.default)}getIds(){return this.ids().join(",")}toJson(){return{name:this.name(),ids:this.ids(),default:this.default()}}getStored(){return this.default()?"":this.getIds()}}var C;!function(e){e.ALL="ALL",e.SINGLE="SINGLE",e.SET="SET"}(C||(C={}));class D{constructor(e){this.showAllThreshold=7,this.nameAttr="name",this.store=e.store,this.available=i.observableArray([]),this.isLoading=i.observable(!0),this.store.getAllAvailable().then((t=>{o(this.available,t),this.sets()[0].ids(t.map((e=>e.id))),this.loadDefault(e.default),this.loadGroups(),this.isLoading(!1)})),this.selectMode=i.observable(C.ALL),this.singleSet=i.observable(new A({default:!1,ids:[],name:"Just this one"})),this.singleOption=i.observable(null);let t=this.loadFromLocalStorage().map((e=>new A(e)));this.sets=i.observableArray(t),this.currentSet=e.modelSet,this.currentSet(this.sets()[0]),this.editorVisible=i.observable(!1),this.selectedOptions=i.observableArray([]),this.bulkEditor=i.observable(""),this.showAll=i.observable(!1),this.currentSet.subscribe((()=>{this.editorVisible()&&this.selectedOptions(this.currentSet().ids())})),this.singleOption.subscribe((()=>{this.singleSet().ids([this.singleOption()]),this.currentSet(this.singleSet())})),this.selectMode.subscribe((()=>{switch(this.selectMode()){case C.ALL:case C.SET:this.currentSet(this.sets()[0]);break;case C.SINGLE:this.currentSet(this.singleSet())}}),this),this.selectedOptions.subscribe((e=>{if(this.currentSet().default()&&e.some((e=>"deleted"===e.status))){let e=this.selectedOptions();this.startAdding(e)}}),this,"arrayChange"),this.prettyResult=i.pureComputed((()=>{let e=this.currentSet().ids();return this.showAll()||(e=e.slice(0,this.showAllThreshold)),e.map((e=>this.store.getInstance(e)))}),this)}getDefaultGroupSetName(){return"Everything"}getNewGroupSetName(){return"New set"}loadFromLocalStorage(){let e=localStorage.getItem(this.store.getLocalStorageKey());return null===e?[{name:this.getDefaultGroupSetName(),default:!0,ids:[]}]:JSON.parse(e)}startEditing(){this.editorVisible(!0),this.selectedOptions(this.currentSet().ids())}startAdding(e){let t=new A({name:this.getNewGroupSetName(),default:!1,ids:e||[]});return this.sets.push(t),this.currentSet(t),this.editorVisible(!0),t}addAsEmails(){}loadDefault(e){if("first"===e)this.selectMode(C.SINGLE),this.singleOption(this.available()[0].id);else if("all"===e||""===e.trim())this.selectMode(C.ALL),this.currentSet(this.sets()[0]);else{let t=e.split(",").map((e=>parseInt(e,10)));switch(t.length){case 0:case this.available().length:this.selectMode(C.ALL),this.currentSet(this.sets()[0]);break;case 1:this.available().some((e=>e.id===t[0]))&&(this.selectMode(C.SINGLE),this.singleOption(t[0]));break;default:this.sets().forEach((e=>{(function(e,t){const s={};for(const t of e)s[t]=1;for(const e of t){if(!s[e])return!1;s[e]=2}for(let e in s)if(1===s[e])return!1;return!0})(e.ids(),t)&&(this.selectMode(C.SET),this.currentSet(e))}))}}}loadGroups(){this.getItemGroups().forEach((e=>{this.sets().push(new A({name:e.name,default:!0,ids:e.children.map((e=>e.id))}))}))}deleteSet(){if(this.currentSet().default())return this.editorVisible(!1),!1;if(confirm("Are you sure you want to delete this set?")){let e=this.currentSet();return this.currentSet(this.sets()[0]),this.sets.remove(e),this.saveToLocalStorage(),this.editorVisible(!1),!0}return!1}saveSet(){this.currentSet().ids(this.selectedOptions()),this.saveToLocalStorage(),this.editorVisible(!1)}cancelEdit(){this.editorVisible(!1)}saveToLocalStorage(){let e=JSON.stringify(this.sets().map((e=>e.toJson())));localStorage.setItem(this.store.getLocalStorageKey(),e)}}const O=e=>`\n    <div>\n        \x3c!-- Mode Select --\x3e\n        <div class="form-check form-check-inline">\n            <input class="form-check-input"\n                   data-bind="checked: selectMode, disable: isLoading"\n                   type="radio" name="${e}" id="${e}1" value="ALL">\n            <label class="form-check-label" for="${e}1">\n                All\n            </label>\n        </div>\n        <div class="form-check form-check-inline">\n            <input class="form-check-input"\n                   data-bind="checked: selectMode, disable: isLoading"\n                   type="radio" name="${e}" id="${e}2" value="SINGLE">\n            <label class="form-check-label" for="${e}2">\n                Only\n            </label>\n        </div>\n        <div class="form-check form-check-inline">\n            <input class="form-check-input"\n                   data-bind="checked: selectMode, disable: isLoading"\n                   type="radio" name="${e}" id="${e}3" value="SET">\n            <label class="form-check-label" for="${e}3">\n                ${e} set\n            </label>\n        </div>\n        \n        \x3c!-- Single Person --\x3e\n        <div data-bind="if: selectMode()==='SINGLE'">\n        <form class="form-inline">\n        <select data-bind="foreach: getItemGroups(), value: singleOption, optionsText: 'title', optionsValue: 'id'"\n                class="form-control custom-select ml-2 custom-select-sm">\n            <optgroup data-bind="attr: {label: name}, foreach: children">\n                <option data-bind="text: $data.title(), option: $data.id"></option>\n            </optgroup>\n        </select>\n        </form>\n        </div>\n        \n        \x3c!-- Subset --\x3e\n        <div data-bind="if: selectMode()==='SET'">\n        <form class="form-inline">\n            Show ${e} set:\n            <select data-bind="options: sets,\n                               optionsText: 'name',\n                               valueAllowUnset: true,\n                               value: currentSet"\n                    class="form-control custom-select ml-2 custom-select-sm">\n            </select>\n            <button type="button" class="btn btn-sm btn-outline-secondary ml-2"\n                    data-bind="click: startEditing, visible: !editorVisible()">\n                    <span class="fas fa-edit"></span>\n                    Edit this ${e} set</button>\n            <button type="button" class="btn btn-sm btn-outline-secondary ml-2"\n                    data-bind="click: () => startAdding(), visible: !editorVisible()">\n                    <span class="fas fa-plus"></span>\n                    Add new ${e} set</button>\n                                             \n        </form>\n        <div data-bind="if: editorVisible">\n            <label>Current ${e} set name:\n                <input type="text" data-bind="value: currentSet().name, disable: currentSet().default">\n            </label><br>\n           <select multiple=multiple style="width: 100%"\n                 data-bind="selectedOptions: selectedOptions, valueAllowUnset: true,\n                              options: available, optionsText: 'title', optionsValue: 'id', \n                              select2: { placeholder: '${e}', allowClear: true }"></select>\n\n            \x3c!-- Incomplete\n            <label style="min-width: 100%">Bulk Editor (separated by commas):\n                <button type="button" class="btn btn-outline-secondary btn-sm"\n                    data-bind="click: addAsEmails">Add as Emails</button>\n                <br>\n                <textarea data-bind="value: currentSet().emails,\n                                     disable: currentSet().default"\n                 style="min-width: 100%"></textarea></label><br>\n             --\x3e\n            <button type="button" class="btn btn-danger btn-sm float-right mt-2"\n                    data-bind="click: deleteSet">Delete current ${e} set</button>\n            <button type="button" class="btn btn-success btn-sm mt-2"\n                    data-bind="click: saveSet">Save ${e} set</button>\n            <button type="button" class="btn btn-outline-secondary btn-sm mt-2 ml-4"\n                    data-bind="click: cancelEdit">Cancel changes</button>\n        </div>\n        </div>\n        <div data-bind="ifnot: editorVisible">\n            <div data-bind="if: isLoading">\n                <div class="spinner-loader" role="status">\n                    <span class="sr-only">Loading...</span>\n                </div>\n            </div>\n            <div data-bind="ifnot: isLoading">\n                Included ${e}(s): \n                <span data-bind="foreach: prettyResult">\n                    <span data-bind="text: title"></span>, \n                </span>\n                \x3c!-- ko if: currentSet().ids().length > showAllThreshold --\x3e\n                <button type="button" class="btn btn-primary btn-sm" data-bind="click: () => showAll(!showAll())">\n                    <span data-bind="if: showAll">\n                        Hide all\n                    </span>\n                    <span data-bind="ifnot: showAll">\n                        Show more <span class="badge badge-light" data-bind="text: currentSet().ids().length - showAllThreshold"></span>\n                    </span>\n                </button>\n                \x3c!-- /ko --\x3e\n            </div>\n        </div>\n    </div>`;class N{constructor(e,t){this.name=e,this.model=t,this.children=[]}}var R,F,U,H,P,G,Y;i.components.register("user-set-selector",{viewModel:class extends D{constructor(e){super(e),this.getItemGroups=i.pureComputed((()=>{let e={};return this.available().forEach((t=>{t.primaryRole()in e||(e[t.primaryRole()]=new N(t.primaryRole(),t.roles)),e[t.primaryRole()].children.push(t)})),Object.values(e)}),this),this.store.sortMode.subscribe((()=>{this.available.sort(this.store.sortMethod.bind(this.store))}))}getDefaultGroupSetName(){return"All students"}getNewGroupSetName(){return"New user set"}},template:O("User")}),i.components.register("assignment-set-selector",{viewModel:class extends D{constructor(e){super(e),this.nameAttr="title",this.getItemGroups=i.pureComputed((()=>{let e={};return this.available().forEach((t=>{let s,i;null===t.group()?(s=-2,i="Ungrouped Assignments"):(s=t.group().id,i=t.group().name()),s in e||(e[s]=new N(i,t.group())),e[s].children.push(t)})),Object.values(e)}),this)}getDefaultGroupSetName(){return"All assignments"}getNewGroupSetName(){return"New assignment set"}},template:O("Assignment")}),function(e){e.INITIALIZED="Initialized",e.STARTED="Started",e.IN_PROGRESS="inProgress",e.SUBMITTED="Submitted",e.COMPLETED="Completed"}(R||(R={})),function(e){e.FULLY_GRADED="FullyGraded",e.PENDING="Pending",e.PENDING_MANUAL="PendingManual",e.FAILED="Failed",e.NOT_READY="NotReady"}(F||(F={}));class B extends g{constructor(e){super(e),this.FIELDS=new r({date_modified:"dateModified",date_created:"dateCreated",code:"code",extra_files:"extraFiles",url:"url",endpoint:"endpoint",score:"score",correct:"correct",submission_status:"submissionStatus",grading_status:"gradingStatus",assignment_id:"assignmentId",assignment_group_id:"assignmentGroupId",assignment_version:"assignmentVersion",course_id:"courseId",user_id:"userId",version:"version"}),this.koFromJson(e)}getAsSubmissionKey(){return[this.courseId(),this.userId(),this.assignmentId()].join(",")}checkGrading(e){return this.gradingStatus().toLowerCase()===e.toLowerCase()}checkSubmission(e){return this.submissionStatus().toLowerCase()===e.toLowerCase()}}class J extends v{constructor(){super(...arguments),this.GET_FIELD="submissions"}getPayload(){return{submission_ids:this.getDelayedIds().join(","),course_id:this.courseId}}getUrl(){return"submission/get_ids"}makeEmptyInstance(e){return new B({assignment_group_id:null,assignment_id:null,assignment_version:0,code:"",correct:!1,course_id:null,endpoint:"",extra_files:"",grading_status:F.NOT_READY,score:0,submission_status:R.INITIALIZED,url:"",user_id:void 0,version:0,id:e,date_created:null,date_modified:null})}getLocalStorageKey(){return`BLOCKPY_COURSE_${this.courseId}_SUBMISSIONS`}}function V(e,t){var s=document.createElement("form");s.setAttribute("method","post"),s.setAttribute("action",window.$URL_ROOT+"blockpy/load_readonly"),s.setAttribute("target","_blank");let i={user:{role:"instructor"},assignment:e?e.toJson():null,submission:t?t.toJson():null};i.assignment.forked_id=e.id,i.assignment.forked_version=e.version(),i.assignment.id=null,i.assignment.url="",i.assignment.course_id=null,i.submission.id=null,i.submission.endpoint="",i.submission.url="",i.submission.user_id=null,i.submission.course_id=null,i.submission.assignment_id=null,i.submission.grading_status=F.NOT_READY,i.submission.submission_status=R.IN_PROGRESS;var n=document.createElement("input");n.setAttribute("type","hidden"),n.setAttribute("name","assignment_data"),n.setAttribute("value",JSON.stringify(i,null,2)),s.appendChild(n),document.body.appendChild(s),s.submit()}!function(e){e[e.SUMMARY=0]="SUMMARY",e[e.FULL=1]="FULL"}(U||(U={})),function(e){e.FEEDBACK="Feedback",e.SYSTEM="System",e.BOTH="Both",e.HIDE="Hidden"}(H||(H={}));class K{constructor(e,t){this.makeNextState(e,t)}getPrettyTime(){return e=this.log.when(),m(parseInt(e,10));var e}getPrettyLastEdit(e){let t=e!==U.SUMMARY?this.log.when():null;return p(this.lastEdit,t)}getPrettyLastRan(e){let t=e!==U.SUMMARY?this.log.when():null;return p(this.lastRan,t)}getPrettyLastOpened(e){let t=e!==U.SUMMARY?this.log.when():null;return p(this.lastOpened,t)}copyState(e){null===e?(this.code="",this.friendly="Not Loaded",this.feedback="Not yet executed",this.system="",this.lastRan=null,this.lastEdit=null,this.lastOpened=null,this.completed=!1,this.score=0,this.mode="unknown",this.fullscreen=!1,this.log=null):(this.code=e.code,this.feedback=e.feedback,this.system=e.system,this.lastRan=e.lastRan,this.lastEdit=e.lastEdit,this.lastOpened=e.lastOpened,this.completed=e.completed,this.score=e.score,this.mode=e.mode,this.fullscreen=e.fullscreen,this.log=null)}makeNextState(e,t){switch(this.copyState(e),this.log=t,this.friendly=T[t.eventType()],t.eventType()){case"File.Create":this.code=t.message(),this.lastEdit=t.when();break;case"File.Edit":this.code=t.message(),this.lastEdit=t.when(),this.system="<strong>Edited code</strong>";break;case"Session.Start":this.lastOpened=t.when(),this.system="<strong>New Session</strong>";break;case"Compile":this.system="<strong>Compiling</strong>";break;case"Run.Program":this.lastRan=t.when(),this.system=`<strong>Run</strong><div>${t.message()}</div>`;break;case"Compile.Error":this.system=`<strong>Compiler Error</strong><div>${t.message()}</div>`;break;case"Intervention":this.completed=this.completed||"Complete"===t.category(),this.feedback=`<strong>${t.label()}</strong><div>${t.message()}</div>`;break;case"X-View.Change":this.mode=t.message(),this.system=`<strong>Changed Editing Mode</strong><div>${this.mode}</div>`;break;case"X-Submission.LMS":this.score=parseInt(t.message(),10),this.system=`<strong>Submitted Score</strong><div>${this.score}</div>`}}}class j{constructor(e,t){this.states=i.observableArray([]),this.currentStateIndex=i.observable(0),this.user=e,this.assignment=t,this.watchMode=i.observable(U.SUMMARY),this.feedbackMode=i.observable(H.FEEDBACK),this.isVcrActive=i.pureComputed((()=>this.watchMode()!==U.SUMMARY),this),this.getWatchModeClass=i.pureComputed((()=>{switch(this.watchMode()){case U.SUMMARY:return"fa-eye";case U.FULL:return"fa-eye-slash"}}),this),this.currentState=i.pureComputed((()=>{if(this.states().length>0)return this.watchMode()!==U.SUMMARY?this.states()[this.getCurrentStateIndex()]:d(this.states());console.error("No states are currently loaded!")}),this),this.isSummary=i.pureComputed((()=>this.watchMode()===U.SUMMARY),this),this.isFull=i.pureComputed((()=>this.watchMode()===U.FULL),this)}getCurrentStateIndex(){return parseInt(this.currentStateIndex(),10)}addLogs(e){let t=[],s=this.states().length?d(this.states()):null;for(let i=0;i<e.length;i+=1){let n=new K(s,e[i]);t.push(n),s=n}o(this.states,t)}reload(){l("blockpy/load_history",{assignment_id:this.submission.assignmentId(),course_id:this.submission.courseId(),user_id:this.submission.userId(),with_submission:!0}).then((e=>{if(e.success){let t=this.states.length>0?this.states()[this.states.length-1].log.id:-1;this.addLogs(e.history.filter((e=>t<e.id)).map((e=>new x(e)))),this.submission.fromJson(e.submissions[0])}else console.error(e)})),console.log("Need to update myself!")}loadHistorySelector(e){let t,s=this.getSelector(e);s.empty();let i=null;for(t=0;t<this.states().length;t+=1){let e=this.states()[t].log,a=b(e.clientTimestamp());null!==i&&i.attr("label")==a||(i=$("<optgroup></optgroup>"),i.attr("label",a),s.append(i));let o=T[e.eventType()]||e.eventType(),r=(void 0===(n=e.clientTimestamp())?"Undefined Time":new Date(parseInt(n,10)).toLocaleTimeString())+" - "+o,d=$("<option></option>",{text:r});d.attr("value",t),i.append(d)}var n;this.currentStateIndex(t-1)}switchWatchMode(e,t){switch(this.watchMode()){case U.FULL:this.watchMode(U.SUMMARY);break;case U.SUMMARY:this.loadHistorySelector(t),this.watchMode(U.FULL)}}switchFeedbackMode(e,t){switch(this.feedbackMode()){case H.FEEDBACK:this.feedbackMode(H.SYSTEM);break;case H.SYSTEM:this.feedbackMode(H.BOTH);break;case H.BOTH:this.feedbackMode(H.HIDE);break;case H.HIDE:this.feedbackMode(H.FEEDBACK)}}getSelector(e){return $(e.target).closest("div").find(".history-select")}moveToMostRecent(e,t){console.log(this.states().length-1),this.currentStateIndex(this.states().length-1)}moveToBack(e,t){this.currentStateIndex(Math.max(0,this.getCurrentStateIndex()-1))}seekToBack(e,t){let s,i=this.getCurrentStateIndex();do{i-=1,s=this.states()[i]}while(i>0&&!s.log.isEditEvent());this.currentStateIndex(i)}moveToNext(e,t){this.currentStateIndex(Math.min(this.states().length-1,this.getCurrentStateIndex()+1))}seekToNext(e,t){let s,i=this.getCurrentStateIndex();do{i+=1,s=this.states()[i]}while(i<this.states().length-1&&!s.log.isEditEvent());this.currentStateIndex(i)}moveToStart(e,t){this.currentStateIndex(0)}launchEditor(){V(this.assignment,this.submission)}}i.components.register("submission-history-card",{template:'\n\x3c!-- ko if: grouping() !== \'None\' --\x3e\n<h4 data-bind="text: grouping() === \'User\' ? user.title() : assignment.title()"></h4>\n\x3c!-- /ko --\x3e\n<div class="">\n    \x3c!-- ko if: submissionHistory.states().length>0 --\x3e\n    <div class="row">\n        <div class="col-md-6">\n            <div data-bind="component: {name: \'user-short\', params: user}"></div>\n            <div data-bind="component: {name: \'assignment-short\', params: assignment}"></div>\n            <div>Score: <span data-bind="text: currentState().completed ? \'Correct\' : \'Incomplete\'"></span> (<span data-bind="text: currentState().score"></span>)</div>\n            <div>Open submission in <a href="#" data-bind="click: $parent.launchEditor.bind($parent)">Readonly Editor</a></div>\n        </div>\n        <div class="col-md-6">\n            <div>Last Logged Event: <span data-bind="text: currentState().getPrettyTime()"></span></div>\n            <div>Last Edited: <span data-bind="text: currentState().getPrettyLastEdit(watchMode())"></span></div>\n            <div>Last Ran: <span data-bind="text: currentState().getPrettyLastRan(watchMode())"></span></div>\n            <div>Last Opened: <span data-bind="text: currentState().getPrettyLastOpened(watchMode())"></span></div>    \n        </div>\n        <div class="col-md-12">\n            <submission-history-vcr params="submissionHistory: submissionHistory"></submission-history-vcr>\n        </div>\n        <div class="mt-2" data-bind="css: { \'col-md-6\': submissionHistory.feedbackMode() !== \'Hidden\',\n                                            \'col-md-11\': submissionHistory.feedbackMode() === \'Hidden\' },\n                                     ifnot: submissionHistory.isSummary()">\n            <pre class="python-code-block">\n                <code data-bind="highlightedCode: currentState().code" class="python" style="height: 200px; overflow: scroll"></code>\n            </pre>\n        </div>\n        <div class="mt-2" data-bind="css: { \'col-md-6\': submissionHistory.feedbackMode() !== \'Hidden\',\n                                            \'col-md-1\': submissionHistory.feedbackMode() === \'Hidden\' },\n                                     if: submissionHistory.isFull()">\n            <buton class="float-right btn btn-outline-secondary btn-sm"\n                   data-bind="text: submissionHistory.feedbackMode(),\n                              click: submissionHistory.switchFeedbackMode.bind(submissionHistory)"></buton>\n            \x3c!-- ko if: submissionHistory.feedbackMode() === \'Feedback\' || submissionHistory.feedbackMode() === \'Both\' --\x3e\n            <div data-bind="html: currentState().feedback"></div>\n            \x3c!-- /ko --\x3e\n            \x3c!-- ko if: submissionHistory.feedbackMode() === \'System\' || submissionHistory.feedbackMode() === \'Both\' --\x3e\n            <div data-bind="html: currentState().system"></div>\n            \x3c!-- /ko --\x3e\n        </div>\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko ifnot: submissionHistory.states().length>0 --\x3e\n    <div class="row">\n        <div class="col-md-6">\n            <div data-bind="component: {name: \'user-short\', params: user}"></div>\n            <div data-bind="component: {name: \'assignment-short\', params: assignment}"></div>\n            <div>Not yet started!</div>\n        </div>\n    </div>\n    \x3c!-- /ko --\x3e\n</div>\n'}),i.components.register("submission-history-vcr",{template:'\n    <form class="form-inline">\n        <button class="btn btn-outline-secondary mr-2 btn-sm" type="button"\n            data-bind="click: submissionHistory.switchWatchMode.bind(submissionHistory)">\n            <span class=\'fas\' data-bind="class: submissionHistory.getWatchModeClass()"></span>\n        </button>\n        <button class="btn btn-outline-secondary mr-2 btn-sm"\n                data-bind="click: submissionHistory.reload.bind(submissionHistory)">\n                <span class="fas fa-sync"></span> Sync\n        </button>\n        <div data-bind="visible: submissionHistory.isVcrActive()">\n            <button class="btn btn-outline-secondary mr-2 btn-sm" type="button"\n                data-bind="click: submissionHistory.moveToStart.bind(submissionHistory)">\n                <span class=\'fas fa-step-backward\'></span> Start\n            </button>\n            <button class="btn btn-outline-secondary mr-2 btn-sm" type="button"\n                data-bind="click: submissionHistory.seekToBack.bind(submissionHistory)">\n                <span class=\'fas fa-fast-backward\'></span>\n            </button>\n            <button class="btn btn-outline-secondary mr-2 btn-sm" type="button"\n                data-bind="click: submissionHistory.moveToBack.bind(submissionHistory)">\n                <span class=\'fas fa-backward\'></span> Back\n            </button>\n            <select class="history-select form-control custom-select mr-2 custom-select-sm"\n                data-bind="value: submissionHistory.currentStateIndex"\n                aria-title="History Selector">\n            </select>\n            <button class="btn btn-outline-secondary mr-2 btn-sm" type="button"\n                data-bind="click: submissionHistory.moveToNext.bind(submissionHistory)">\n                <span class=\'fas fa-forward\'></span> Next\n            </button>\n            <button class="btn btn-outline-secondary mr-2 btn-sm" type="button"\n                data-bind="click: submissionHistory.seekToNext.bind(submissionHistory)">\n                <span class=\'fas fa-fast-forward\'></span>\n            </button>\n            <button class="btn btn-outline-secondary mr-2 btn-sm" type="button"\n                data-bind="click: submissionHistory.moveToMostRecent.bind(submissionHistory)">\n                <span class=\'fas fa-step-forward\'></span> Most Recent\n            </button>\n        </div>\n    </form>\n'}),function(e){e.NONE="None",e.ASSIGNMENT="Assignment",e.USER="User"}(P||(P={}));class W{constructor(e){this.courseId=i.observable(e.courseId),this.userIds=e.userIds,this.assignmentIds=e.assignmentIds,this.userSet=i.observable(null),this.assignmentSet=i.observable(null),this.grouping=i.observable(P.NONE),this.submissions=i.observableArray([]),this.cauToSubmission={},this.server=e.server,this.isLoading=i.observable(!1),this.hasFailed=i.observable(!1),this.server.userStore.sortMode.subscribe((()=>{this.submissions.sort(((e,t)=>this.server.userStore.sortMethod(e.user,t.user)))}))}addLogs(e){let t={};for(let s=0;s<e.length;s+=1){let i=new x(e[s]),n=i.getAsSubmissionKey();if(!(n in this.cauToSubmission)){let e=this.server.userStore.getInstance(i.subjectId()),t=this.server.assignmentStore.getInstance(i.assignmentId());this.cauToSubmission[n]=new j(e,t),this.submissions.push(this.cauToSubmission[n])}n in t||(t[n]=[]),t[n].push(i)}for(let e in t)this.cauToSubmission[e].addLogs(t[e])}addSubmissions(e){for(let t=0;t<e.length;t+=1){let s=new B(e[t]),i=s.getAsSubmissionKey();if(!(i in this.cauToSubmission)){let e=this.server.userStore.getInstance(s.userId()),t=this.server.assignmentStore.getInstance(s.assignmentId());this.cauToSubmission[i]=new j(e,t),this.submissions.push(this.cauToSubmission[i])}this.cauToSubmission[i].submission=s}}clearData(){this.cauToSubmission={},this.submissions.removeAll()}getLatest(){localStorage.setItem("BLOCKPY_SERVER_USERIDS",this.userSet().getStored()),localStorage.setItem("BLOCKPY_SERVER_ASSIGNMENTIDS",this.assignmentSet().getStored()),this.isLoading(!0),this.hasFailed(!1),this.setGroupingMode(),l("blockpy/load_history",{assignment_id:this.assignmentSet().getIds(),course_id:this.courseId(),user_id:this.userSet().getIds(),with_submission:!0}).then((e=>{this.isLoading(!1),this.hasFailed(!e.success),e.success?(this.clearData(),this.addLogs(e.history),this.addSubmissions(e.submissions)):console.error("Loading history failed!",e)})).fail((()=>{console.error("Loading history failed to get data!",arguments),this.hasFailed(!0),this.isLoading(!1)}))}setGroupingMode(){let e=this.assignmentSet().getIds().length,t=this.userSet().getIds().length;t>e?this.grouping(P.USER):t<e?this.grouping(P.ASSIGNMENT):this.grouping(P.NONE)}}i.components.register("watcher",{viewModel:W,template:'\n    <div>\n    <user-display-settings-editor params="options: server.userStore.displayOptions, sortMode: server.userStore.sortMode, displayMode: server.userStore.displayMode"></user-display-settings-editor>\n    User(s):\n        <user-set-selector params="store: server.userStore, modelSet: userSet, default: userIds"></user-set-selector>\n    </div>\n    <div class="mt-4 mb-4">\n    Assignment(s):\n        <assignment-set-selector params="store: server.assignmentStore, modelSet: assignmentSet, default: assignmentIds"></assignment-set-selector>\n    </div>\n    <div class="mb-4 mt-4">\n        <button class="btn btn-primary" data-bind="click: getLatest">Load Events</button>\n    </div>\n    <div data-bind="if: isLoading">\n        <div class="spinner-loader" role="status">\n            <span class="sr-only">Loading...</span>\n        </div>\n    </div>\n    \x3c!-- ko if: hasFailed --\x3e\n    <div class="alert alert-danger" role="alert">\n        Loading these events has failed; more details in JS console.\n    </div>\n    \x3c!-- /ko --\x3e\n    <div data-bind="ifnot: isLoading">\n        <div data-bind="foreach: submissions" class="row">\n            <submission-history-card params="submissionHistory: $data, currentState: currentState, watchMode: watchMode,\n                                             user: user, assignment: assignment, grouping: $parent.grouping"\n                                     class="col-md-12 mb-4 rounded bg-light"></submission-history-card>    \n        </div>\n    </div>\n'}),function(e){e.NATIVE="native",e.LTI="lti"}(G||(G={})),function(e){e.PRIVATE="private",e.PUBLIC="public"}(Y||(Y={}));class z extends g{constructor(e){super(e),this.FIELDS=new r({name:"name",url:"url",owner_id:"ownerId",service:"service",external_id:"externalId",endpoint:"endpoint",visibility:"visibility",term:"term",settings:"settings",date_modified:"dateModified",date_created:"dateCreated"}),this.koFromJson(e)}}class X extends v{constructor(){super(...arguments),this.GET_FIELD="courses"}getPayload(){return{course_id:this.courseId}}getUrl(){return"courses"}getLocalStorageKey(){return`BLOCKPY_COURSE_${this.courseId}_COURSES`}makeEmptyInstance(e){return new z({id:e,date_created:null,date_modified:null,endpoint:"",external_id:"",name:"Unknown Course",owner_id:null,service:null,settings:"",term:"Unknown term",url:"",visibility:null})}}i.components.register("course",{viewModel:z,template:'\n    <div>Course: <span data-bind="text: name"></span></div>\n'});class q extends g{constructor(e){super(e),this.FIELDS=new r({date_modified:"dateModified",date_created:"dateCreated",comment:"comment",location:"location",generic:"generic",tag_id:"tagId",score:"score",submission_id:"submissionId",author_id:"authorId",assignment_version:"assignmentVersion",submission_version:"submissionVersion",version:"version",forked_id:"forkedId",forked_version:"forkedVersion"}),this.koFromJson(e)}}class Z extends v{constructor(){super(...arguments),this.GET_FIELD="submissions"}getPayload(){return{submission_ids:this.getDelayedIds().join(","),course_id:this.courseId}}getUrl(){return"submission/get_ids"}makeEmptyInstance(e){return new q({assignment_version:0,author_id:0,comment:"",forked_id:null,forked_version:null,generic:!1,location:"",score:0,submission_id:null,submission_version:0,tag_id:null,version:0,id:e,date_created:null,date_modified:null})}getLocalStorageKey(){return`BLOCKPY_COURSE_${this.courseId}_REVIEWS`}}class Q{constructor(e,t,s){this.courseId=e,this.userStore=new M(this,e,t.userIds,s.users),this.courseStore=new X(this,e,t.courseIds,s.courses),this.assignmentStore=new k(this,e,t.assignmentIds,s.assignments),this.assignmentGroupStore=new y(this,e,t.assignmentGroupIds,s.assignmentGroups),this.reviewStore=new Z(this,e,t.reviewIds,s.reviews),this.submissionStore=new J(this,e,t.submissionIds,s.submissions)}}i.components.register("course-list",{viewModel:class{constructor(e){this.server=e.server,this.courses=e.courses,this.user=e.user,console.log("TEST")}getRole(e){let t=this.user.roles();for(let s=0;s<t.length;s+=1){let i=t[s];if(i.courseId()===e)return i.name()}return"No Role"}},template:'\n<ul class="list-unstyled">\n\x3c!-- ko foreach: courses --\x3e\n    <li class="media mt-2 border-bottom">\n        <a data-bind="attr: {href: id}" class="btn btn-primary mr-3">\n            <span class="fas fa-eye"></span> Open\n        </a>\n        <div class="media-body">\n            <div class="d-flex w-100 justify-content-between">\n                <h5 class="mb-1" data-bind="text: name"></h5>\n                <small class="text-muted" data-bind="text: prettyDateCreated"></small>\n            </div>\n            <p class="mb-1">\n                Role: <span data-bind="text: $parent.getRole(id)" class="text-capitalize"></span><br>\n                <p data-bind="text: term"></p>\n            </p>\n            <small class="text-muted" data-bind="if: url">\n                Course URL: <span data-bind="text: url"></span>,\n            </small>\n            <small class="text-muted" data-bind="if: service()!==\'native\'">\n                LMS: <span data-bind="text: service"></span>,\n            </small>\n            <small class="text-muted">\n                Course ID: <span data-bind="text: id"></span>\n            </small>\n        </div>\n    </li>\n\x3c!-- /ko --\x3e\n</ul>\n'})}},t={};function s(i){if(t[i])return t[i].exports;var n=t[i]={exports:{}};return e[i](n,n.exports,s),n.exports}return s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s(460)})();
//# sourceMappingURL=frontend.js.map