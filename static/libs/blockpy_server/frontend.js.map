{"version":3,"sources":["webpack://frontend/external \"ko\"","webpack://frontend/external \"CodeMirror\"","webpack://frontend/./components/plugins.ts","webpack://frontend/./components/assignment_group.ts","webpack://frontend/./components/server.ts","webpack://frontend/./components/group_list.ts","webpack://frontend/./components/model.ts","webpack://frontend/./components/user.ts","webpack://frontend/./components/assignment.ts","webpack://frontend/./components/log.ts","webpack://frontend/./components/dates.ts","webpack://frontend/./components/watcher.ts","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/startup","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/make namespace object"],"names":["ko","CodeMirror","init","element","valueAccessor","options","editor","on","cm","value","getValue","wrapper","getWrapperElement","parentNode","removeChild","update","cur","getCursor","setValue","setCursor","refresh","TwoWayReadonlyMap","map","this","Map","lefts","rights","member","push","set","key","get","AssignmentGroup","data","id","name","ajax_get","url","$","window","viewModel","template","GroupList","groups","ready","load","course_id","then","g","Model","FIELDS","dateModified","date_modified","dateCreated","date_created","forEach","left","right","ModelStore","courseId","delayedData","timer","undefined","delayedInstance","makeEmptyInstance","delayLoadInstance","instance","clearTimeout","queueFinishDelay","length","finishDelayedLoads","setTimeout","bind","ids","getInstance","getPayload","getUrl","success","created","GET_FIELD","modelJson","fromJson","removeDelayedInstances","console","error","filter","includes","Role","super","koFromJson","User","firstName","lastName","primaryRole","roles","role","capitalize","str","replace","charAt","toUpperCase","slice","join","removeAll","result","toJson","UserStore","user_ids","getDelayedIds","email","first_name","last_name","Assignment","AssignmentStore","assignment_ids","type","instructions","reviewed","hidden","public","ip_ranges","settings","on_run","on_change","on_eval","starting_code","extra_instructor_files","extra_starting_files","forked_id","forked_version","owner_id","version","Log","subjectId","assignmentId","eventType","REMAP_EVENT_TYPES","monthNames","weekDays","WatchMode","WatchGroupingMode","SubmissionHistory","initialLog","user","assignment","code","logs","watchMode","FROZEN_LATEST","isVcrActive","REVIEW","getWatchModeClass","POLL","log","message","event","selector","getSelector","editId","optGroup","entry","index","formattedDate","timeString","now","Date","past","parseInt","second","first","getDate","getMonth","getFullYear","date","getDay","prettyPrintDate","clientTimestamp","attr","append","displayed","toLocaleTimeString","option","text","val","Math","max","viewLog","currentId","isEditEvent","loadHistorySelector","target","closest","find","min","Watcher","assignmentIds","userIds","grouping","NONE","submissions","cauToSubmission","userStore","assignmentStore","getLatest","submissionId","getAsSubmissionKey","submission","addLog","Set","subject_id","getInstances","assignment_id","addLogs","history","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"frontend.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = ko;","const __WEBPACK_NAMESPACE_OBJECT__ = CodeMirror;","import * as ko from 'knockout';\r\nimport * as CodeMirror from 'codemirror';\r\n\r\n// Knockout codemirror binding handler\r\nko.bindingHandlers.codemirror = {\r\n    init: function (element, valueAccessor) {\r\n        let options = ko.unwrap(valueAccessor());\r\n        element.editor = CodeMirror(element, ko.toJS(options));\r\n        element.editor.on('change', function (cm: any) {\r\n            options.value(cm.getValue());\r\n        });\r\n\r\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n            let wrapper = element.editor.getWrapperElement();\r\n            wrapper.parentNode.removeChild(wrapper);\r\n        });\r\n    },\r\n    update: function (element, valueAccessor) {\r\n        let value = ko.toJS(valueAccessor()).value;\r\n        if (element.editor) {\r\n            let cur = element.editor.getCursor();\r\n            element.editor.setValue(value);\r\n            element.editor.setCursor(cur);\r\n            element.editor.refresh();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// https://stackoverflow.com/a/60766129\r\nexport class TwoWayReadonlyMap {\r\n    map: Map<string, string>;\r\n    lefts: string[];\r\n    rights: string[];\r\n\r\n    constructor(map: Record<string, string>) {\r\n        this.map = new Map<string, string>();\r\n        this.lefts = [];\r\n        this.rights = [];\r\n        for (let member in map) {\r\n            this.lefts.push(member);\r\n            this.rights.push(map[member]);\r\n            this.map.set(member, map[member]);\r\n            this.map.set(map[member], member);\r\n        }\r\n    }\r\n\r\n    get(key: string) {\r\n        return this.map.get(key);\r\n    }\r\n}\r\n\r\nexport function capitalize(str: string): string {\r\n    if (typeof str !== 'string') {\r\n        return '';\r\n    }\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}","import * as ko from 'knockout';\r\n\r\nexport class AssignmentGroupJson {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport class AssignmentGroup {\r\n    id: number;\r\n    name: KnockoutObservable<string>;\r\n\r\n    constructor(data: AssignmentGroupJson) {\r\n        this.id = data.id;\r\n        this.name = ko.observable<string>(data.name);\r\n    }\r\n\r\n}\r\n\r\nexport const AssignmentGroupTemplate = `\r\n    <div>Assignment Group: <span data-bind=\"text: name()\"></span></div>\r\n`;\r\n\r\nko.components.register(\"assignment-group\", {\r\n    viewModel: AssignmentGroup,\r\n    template: AssignmentGroupTemplate\r\n});","declare global {\r\n    var $URL_ROOT: string;\r\n}\r\n\r\nexport function ajax_get(url: string, data: any) {\r\n    return $.get(window[\"$URL_ROOT\"]+url, data);\r\n}","import * as ko from 'knockout';\r\nimport {AssignmentGroup, AssignmentGroupJson} from \"./assignment_group\";\r\nimport {ajax_get} from \"./server\";\r\n\r\nexport class GroupList {\r\n    groups: KnockoutObservableArray<AssignmentGroup>;\r\n\r\n    constructor() {\r\n        this.groups = ko.observableArray<AssignmentGroup>([]);\r\n        $().ready(() => this.load());\r\n    }\r\n\r\n    load() {\r\n        ajax_get(\"get/\", {course_id: 3}).then((data) => {\r\n            this.groups(data.groups.map( (g: AssignmentGroupJson) => new AssignmentGroup(g)));\r\n        });\r\n    }\r\n}\r\n\r\nexport const GroupListTemplate = `\r\n    <div>Groups:\r\n        <div data-bind=\"foreach: groups\">\r\n            <div data-bind=\"component: {name: 'assignment-group', params: $data}\"></assignment-group>\r\n        </div>\r\n    </div>\r\n`;\r\n\r\nko.components.register(\"group-list\", {\r\n    viewModel: GroupList,\r\n    template: GroupListTemplate\r\n});","import * as ko from 'knockout';\r\nimport {TwoWayReadonlyMap} from \"./plugins\";\r\nimport {ajax_get} from \"./server\";\r\nimport {User, UserJson} from \"./user\";\r\n\r\nexport interface ModelJson {\r\n    id: number;\r\n    date_modified: Date;\r\n    date_created: Date;\r\n}\r\n\r\nexport abstract class Model<T extends ModelJson> {\r\n    id: number;\r\n    dateModified: ko.Observable<Date>;\r\n    dateCreated: ko.Observable<Date>;\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\"\r\n    });\r\n\r\n    protected constructor(data: T) {\r\n        this.id = data.id;\r\n        this.dateModified = ko.observable(data.date_modified);\r\n        this.dateCreated = ko.observable(data.date_created);\r\n    }\r\n\r\n    fromJson(data: T) {\r\n        this.FIELDS.lefts.forEach((left) => {\r\n            // @ts-ignore\r\n            this[this.FIELDS.get(left)](data[left]);\r\n        });\r\n    }\r\n\r\n    koFromJson(data: T) {\r\n        this.FIELDS.lefts.forEach((left) => {\r\n            // @ts-ignore\r\n            this[this.FIELDS.get(left)] = ko.observable(data[left]);\r\n        });\r\n    }\r\n\r\n    toJson(): T {\r\n        let data = {id: this.id};\r\n        // @ts-ignore\r\n        this.FIELDS.rights.forEach((right) => data[this.FIELDS.get(right)]=this[right]());\r\n        return <T>data;\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ModelStore<J extends ModelJson, T extends Model<J>> {\r\n    private data: Record<number, T>;\r\n    protected courseId: number|null;\r\n\r\n    private timer: number;\r\n    private delayedData: T[];\r\n\r\n    constructor(courseId: number|null) {\r\n        this.data = {};\r\n        this.courseId = courseId;\r\n        this.delayedData = [];\r\n        this.timer = null;\r\n    }\r\n\r\n    getInstance(id: number): T {\r\n        if (this.data[id] !== undefined) {\r\n            return this.data[id];\r\n        } else {\r\n            let delayedInstance = this.makeEmptyInstance(id);\r\n            this.delayLoadInstance(delayedInstance);\r\n            this.data[id] = delayedInstance;\r\n            return delayedInstance;\r\n        }\r\n    }\r\n\r\n    delayLoadInstance(instance: T) {\r\n        clearTimeout(this.timer);\r\n        this.delayedData.push(instance);\r\n        this.queueFinishDelay();\r\n    }\r\n\r\n    queueFinishDelay() {\r\n        if (this.delayedData.length > 25) {\r\n            this.finishDelayedLoads();\r\n        } else if (this.delayedData.length > 0) {\r\n            this.timer = window.setTimeout(this.finishDelayedLoads.bind(this), 1000);\r\n        }\r\n    }\r\n\r\n    getInstances(ids: number[]) {\r\n        return ids.map(this.getInstance.bind(this));\r\n    }\r\n\r\n    abstract getUrl(): string;\r\n    abstract getPayload(): any;\r\n    abstract makeEmptyInstance(id: number): T;\r\n    abstract GET_FIELD: string;\r\n\r\n    finishDelayedLoads() {\r\n        let payload = this.getPayload();\r\n        let url = this.getUrl();\r\n        return ajax_get(this.getUrl(), this.getPayload()).then((data) => {\r\n           if (data.success) {\r\n               let results = data[this.GET_FIELD];\r\n               let created = results.map( (modelJson: J) => {\r\n                   this.data[modelJson.id].fromJson(modelJson);\r\n                   return modelJson.id;\r\n               });\r\n               this.removeDelayedInstances(created);\r\n           } else {\r\n               console.error(data);\r\n           }\r\n        });\r\n    }\r\n\r\n    protected getDelayedIds(): number[] {\r\n        return this.delayedData.map((instance: T) => instance.id);\r\n    }\r\n\r\n    removeDelayedInstances(ids: number[]) {\r\n        this.delayedData = this.delayedData.filter((delayedInstance: T) => !ids.includes(delayedInstance.id));\r\n        this.queueFinishDelay();\r\n    }\r\n}","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {capitalize, TwoWayReadonlyMap} from \"./plugins\";\r\nimport {ajax_get} from \"./server\";\r\n\r\nexport interface RoleJson extends ModelJson {\r\n    id: number;\r\n    name: string;\r\n    user_id: number;\r\n    course_id: number;\r\n}\r\n\r\nexport class Role extends Model<RoleJson> {\r\n    id: number;\r\n    userId: KnockoutObservable<number>;\r\n    courseId: KnockoutObservable<number>;\r\n    name: KnockoutObservable<string>;\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"user_id\": \"userId\",\r\n        \"course_id\": \"courseId\",\r\n        \"name\": \"name\"\r\n    });\r\n\r\n    constructor(data: RoleJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n}\r\n\r\nexport interface UserJson extends ModelJson {\r\n    id: number;\r\n    email: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    roles?: RoleJson[];\r\n}\r\n\r\nexport class User extends Model<UserJson> {\r\n    id: number;\r\n    email: KnockoutObservable<string>;\r\n    firstName: KnockoutObservable<string>;\r\n    lastName: KnockoutObservable<string>;\r\n    roles: KnockoutObservableArray<Role>;\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"email\": \"email\",\r\n        \"first_name\": \"firstName\",\r\n        \"last_name\": \"lastName\"\r\n    });\r\n    name: KnockoutReadonlyComputed<string>;\r\n\r\n    primaryRole: KnockoutReadonlyComputed<string>;\r\n\r\n    constructor(data: UserJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n        this.name = ko.pureComputed(() => {\r\n            return this.firstName() + \" \" + this.lastName();\r\n        }, this);\r\n        this.primaryRole = ko.pureComputed(() => {\r\n            if (!this.roles().length) {\r\n                return \"User\";\r\n            } else {\r\n                return this.roles().map((role: Role) =>\r\n                    capitalize(role.name()\r\n                        .replace(\"urn:lti:role:ims/lis/\", \"\"))\r\n                    ).join(\"/\");\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    koFromJson(data: UserJson) {\r\n        super.koFromJson(data);\r\n        let roles: Role[] = [];\r\n        if (data.roles) {\r\n            roles = data.roles.map((role: RoleJson) => new Role(role));\r\n        }\r\n        this.roles = ko.observableArray(roles);\r\n    }\r\n\r\n    fromJson(data: UserJson) {\r\n        super.fromJson(data);\r\n        this.roles.removeAll();\r\n        if (data.roles) {\r\n            data.roles.forEach((role: RoleJson) => this.roles.push(new Role(role)));\r\n        }\r\n    }\r\n\r\n    toJson(): UserJson {\r\n        let result: UserJson = super.toJson();\r\n        result.roles = this.roles().map((role: Role) => role.toJson());\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class UserStore extends ModelStore<UserJson, User> {\r\n    GET_FIELD: string = \"users\";\r\n\r\n    getPayload(): any {\r\n        return {\r\n            user_ids: this.getDelayedIds().join(\",\"),\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"courses/users\";\r\n    }\r\n\r\n    makeEmptyInstance(id: number): User {\r\n        return new User({\r\n            id: id,\r\n            email: \"\",\r\n            date_created: null,\r\n            date_modified: null,\r\n            first_name: \"\",\r\n            last_name: \"Unknown\"\r\n        });\r\n    }\r\n}\r\n\r\nexport const UserTemplate = `\r\n    <div>User: <span data-bind=\"text: name\"></span></div>\r\n`;\r\n\r\nexport const UserShortTemplate = `\r\n    <div><span data-bind=\"text: primaryRole\"></span>: <span data-bind=\"text: name\"></span> (<span data-bind=\"text: email\"></span>)</div>\r\n`;\r\n\r\nko.components.register(\"user\", {\r\n    viewModel: User,\r\n    template: UserTemplate\r\n});\r\n\r\nko.components.register(\"user-short\", {\r\n    template: UserShortTemplate\r\n})","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {capitalize, TwoWayReadonlyMap} from \"./plugins\";\r\nimport {ajax_get} from \"./server\";\r\n\r\nexport interface AssignmentJson extends ModelJson {\r\n    id: number;\r\n    name: string;\r\n    url: string;\r\n\r\n    type: string;\r\n    instructions: string;\r\n    reviewed: boolean;\r\n    hidden: boolean;\r\n    public: boolean;\r\n    ip_ranges: string;\r\n    settings: string;\r\n\r\n    on_run: string;\r\n    on_change: string;\r\n    on_eval: string;\r\n    starting_code: string;\r\n    extra_instructor_files: string;\r\n    extra_starting_files: string;\r\n\r\n    forked_id: number;\r\n    forked_version: number;\r\n    owner_id: number;\r\n    course_id: number;\r\n    version: number;\r\n}\r\n\r\nexport class Assignment extends Model<AssignmentJson> {\r\n    id: number;\r\n    name: KnockoutObservable<string>;\r\n    url: KnockoutObservable<string>;\r\n    type: KnockoutObservable<string>;\r\n    instructions: KnockoutObservable<string>;\r\n    reviewed: KnockoutObservable<boolean>;\r\n    hidden: KnockoutObservable<boolean>;\r\n    public: KnockoutObservable<boolean>;\r\n    ipRanges: KnockoutObservable<string>;\r\n    settings: KnockoutObservable<string>;\r\n    onRun: KnockoutObservable<string>;\r\n    onChange: KnockoutObservable<string>;\r\n    onEval: KnockoutObservable<string>;\r\n    startingCode: KnockoutObservable<string>;\r\n    extraInstructorFiles: KnockoutObservable<string>;\r\n    extraStartingFiles: KnockoutObservable<string>;\r\n    forkedId: KnockoutObservable<number>;\r\n    forkedVersion: KnockoutObservable<number>;\r\n    ownerId: KnockoutObservable<number>;\r\n    courseId: KnockoutObservable<number>;\r\n    version: KnockoutObservable<number>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"name\": \"name\",\r\n        \"url\": \"url\",\r\n        \"type\": \"type\",\r\n        \"instructions\": \"instructions\",\r\n        \"reviewed\": \"reviewed\",\r\n        \"hidden\": \"hidden\",\r\n        \"public\": \"public\",\r\n        \"ip_ranges\": \"ipRanges\",\r\n        \"settings\": \"settings\",\r\n        \"on_run\": \"onRun\",\r\n        \"on_change\": \"onChange\",\r\n        \"on_eval\": \"onEval\",\r\n        \"starting_code\": \"startingCode\",\r\n        \"extra_instructor_files\": \"extraInstructorFiles\",\r\n        \"extra_starting_files\": \"extraStartingFiles\",\r\n        \"forked_id\": \"forkedId\",\r\n        \"forked_version\": \"forkedVersion\",\r\n        \"owner_id\": \"ownerId\",\r\n        \"course_id\": \"courseId\",\r\n        \"version\": \"version\"\r\n    });\r\n\r\n    constructor(data: AssignmentJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n}\r\n\r\nexport class AssignmentStore extends ModelStore<AssignmentJson, Assignment> {\r\n    GET_FIELD: string = \"assignments\";\r\n\r\n    getPayload(): any {\r\n        return {\r\n            assignment_ids: this.getDelayedIds().join(\",\"),\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"assignments/get_ids\";\r\n    }\r\n\r\n    makeEmptyInstance(id: number): Assignment {\r\n        return new Assignment({\r\n            id: id,\r\n            date_created: null,\r\n            date_modified: null,\r\n            name: \"Unknown\",\r\n            url: \"\",\r\n            type: \"unknown\",\r\n            instructions: \"\",\r\n            reviewed: false,\r\n            hidden: false,\r\n            public: false,\r\n            ip_ranges: \"\",\r\n            settings: \"\",\r\n            on_run: \"\",\r\n            on_change: \"\",\r\n            on_eval: \"\",\r\n            starting_code: \"\",\r\n            extra_instructor_files: \"\",\r\n            extra_starting_files: \"\",\r\n            forked_id: 0,\r\n            forked_version: 0,\r\n            owner_id: 0,\r\n            course_id: 0,\r\n            version: 0\r\n        });\r\n    }\r\n}\r\n\r\nexport const AssignmentTemplate = `\r\n    <div>Assignment: <span data-bind=\"text: name\"></span></div>\r\n`;\r\n\r\nexport const AssignmentShortTemplate = `\r\n    <div>Assignment: <span data-bind=\"text: name\"></span> (<span data-bind=\"text: url\"></span>)</div>\r\n`;\r\n\r\nko.components.register(\"assignment\", {\r\n    viewModel: Assignment,\r\n    template: AssignmentTemplate\r\n});\r\n\r\nko.components.register(\"assignment-short\", {\r\n    template: AssignmentShortTemplate\r\n})","import * as ko from 'knockout';\r\nimport {Model, ModelJson} from \"./model\";\r\nimport {TwoWayReadonlyMap} from \"./plugins\";\r\n\r\nexport interface LogJson extends ModelJson {\r\n    assignment_id: number | null;\r\n    assignment_version: number;\r\n    course_id: number | null;\r\n    subject_id: number | null;\r\n    event_type: string;\r\n    file_path: string;\r\n    category: string;\r\n    label: string;\r\n    message: string;\r\n    client_timestamp: string;\r\n    client_timezone: string;\r\n}\r\n\r\nexport class Log extends Model<LogJson> {\r\n    assignmentId: ko.Observable<number | null>;\r\n    assignmentVersion: ko.Observable<number>;\r\n    courseId: ko.Observable<number | null>;\r\n    subjectId: ko.Observable<number | null>;\r\n    eventType: ko.Observable<string>;\r\n    filePath: ko.Observable<string>;\r\n    category: ko.Observable<string>;\r\n    label: ko.Observable<string>;\r\n    message: ko.Observable<string>;\r\n    clientTimestamp: ko.Observable<string>;\r\n    clientTimezone: ko.Observable<string>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\",\r\n        \"assignment_id\": \"assignmentId\",\r\n        \"assignment_version\": \"assignmentVersion\",\r\n        \"course_id\": \"courseId\",\r\n        \"subject_id\": \"subjectId\",\r\n        \"event_type\": \"eventType\",\r\n        \"file_path\": \"filePath\",\r\n        \"category\": \"category\",\r\n        \"label\": \"label\",\r\n        \"message\": \"message\",\r\n        \"client_timestamp\": \"clientTimestamp\",\r\n        \"client_timezone\": \"clientTimezone\"\r\n    });\r\n\r\n    constructor(data: LogJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n\r\n\r\n\r\n    getAsSubmissionKey() {\r\n        return [this.courseId(), this.subjectId(), this.assignmentId()].join(\",\");\r\n    }\r\n\r\n    isEditEvent() {\r\n        return (this.eventType() === \"File.Edit\" || this.eventType() === \"File.Create\");\r\n    }\r\n}\r\n\r\nexport const REMAP_EVENT_TYPES: Record<string, string> = {\r\n    \"Session.Start\": \"Began session\",\r\n    \"X-IP.Change\": \"Changed IP address\",\r\n    \"File.Edit\": \"Edited code\",\r\n    \"File.Create\": \"Started assignment\",\r\n    \"Run.Program\": \"Ran program\",\r\n    \"Compile.Error\": \"Syntax error\",\r\n    \"X-Submission.LMS\": \"Updated grade\"\r\n};","const monthNames = [\r\n    \"Jan\", \"Feb\", \"Mar\",\r\n    \"Apr\", \"May\", \"June\", \"July\",\r\n    \"Aug\", \"Sept\", \"Oct\",\r\n    \"Nov\", \"Dec\"\r\n];\r\nconst weekDays = [\r\n    \"Sun\", \"Mon\", \"Tue\",\r\n    \"Wed\", \"Thu\", \"Fri\",\r\n    \"Sat\"\r\n];\r\n\r\nexport function isSameDay(first: Date, second: Date) {\r\n    return first.getDate() === second.getDate() &&\r\n        first.getMonth() === second.getMonth() &&\r\n        first.getFullYear() === second.getFullYear();\r\n}\r\n\r\n/**\r\n * Helper function to parse a date/time string and rewrite it as something\r\n * more human readable.\r\n * @param {String} timeString - the string representation of time (\"YYYYMMDD HHMMSS\")\r\n * @returns {String} - A human-readable time string.\r\n */\r\nexport function prettyPrintDateTime(timeString: string): string {\r\n    /*let year = timeString.slice(0, 4),\r\n        month = parseInt(timeString.slice(4, 6), 10)-1,\r\n        day = timeString.slice(6, 8),\r\n        hour = timeString.slice(9, 11),\r\n        minutes = timeString.slice(11, 13),\r\n        seconds = timeString.slice(13, 15);*/\r\n    // TODO: Handle timezones correctly\r\n    if (timeString === undefined) {\r\n        return \"Undefined Time\";\r\n    }\r\n    let now = new Date();\r\n    let past = new Date(parseInt(timeString, 10));\r\n    if (isSameDay(now, past)) {\r\n        return \"Today at \"+past.toLocaleTimeString();\r\n    } else {\r\n        let dayStr = weekDays[past.getDay()];\r\n        let monthStr = monthNames[past.getMonth()];\r\n        let date = dayStr + \", \" + monthStr + \" \" + past.getDate();\r\n        if (now.getFullYear() === past.getFullYear()) {\r\n            return date + \" at \"+past.toLocaleTimeString();\r\n        } else {\r\n            return date + \", \"+past.getFullYear() + \" at \"+past.toLocaleTimeString();\r\n        }\r\n    }\r\n}\r\n\r\nexport function prettyPrintDate(timeString: string): string {\r\n    if (timeString === undefined) {\r\n        return \"Undefined Time\";\r\n    }\r\n    let now = new Date();\r\n    let past = new Date(parseInt(timeString, 10));\r\n    if (isSameDay(now, past)) {\r\n        return \"Today\";\r\n    } else {\r\n        let dayStr = weekDays[past.getDay()];\r\n        let monthStr = monthNames[past.getMonth()];\r\n        let date = dayStr + \", \" + monthStr + \" \" + past.getDate();\r\n        if (now.getFullYear() === past.getFullYear()) {\r\n            return date;\r\n        } else {\r\n            return date + \", \"+past.getFullYear();\r\n        }\r\n    }\r\n}\r\n\r\nexport function prettyPrintTime(timeString: string): string {\r\n    if (timeString === undefined) {\r\n        return \"Undefined Time\";\r\n    }\r\n    let past = new Date(parseInt(timeString, 10));\r\n    return past.toLocaleTimeString();\r\n}","/**\r\n * Watch grouping mode to combine assignments xor users\r\n * Live polling mode\r\n * Show recent events\r\n */\r\n\r\nimport * as ko from 'knockout';\r\nimport {Log, LogJson, REMAP_EVENT_TYPES} from \"./log\";\r\nimport {ajax_get} from \"./server\";\r\nimport {User, UserStore} from \"./user\";\r\nimport {prettyPrintDate, prettyPrintDateTime, prettyPrintTime} from \"./dates\";\r\nimport {Assignment, AssignmentStore} from \"./assignment\";\r\n\r\nexport enum WatchMode {\r\n    FROZEN_LATEST, POLL, REVIEW\r\n}\r\n\r\nexport class SubmissionHistory {\r\n    // Canonical list of logs\r\n    logs: KnockoutObservableArray<Log>;\r\n    // Identity information\r\n    user: User;\r\n    assignment: Assignment;\r\n\r\n    // Current values\r\n    code: KnockoutObservable<string>;\r\n    lastRan: KnockoutObservable<number>;\r\n\r\n\r\n    watchMode: KnockoutObservable<WatchMode>;\r\n    private isVcrActive: KnockoutReadonlyComputed<boolean>;\r\n    private getWatchModeClass: KnockoutReadonlyComputed<string>;\r\n\r\n    constructor(initialLog: Log, user: User, assignment: Assignment) {\r\n        this.code = ko.observable(\"\");\r\n        this.logs = ko.observableArray([]);\r\n        this.user = user;\r\n        this.assignment = assignment;\r\n        this.watchMode = ko.observable(WatchMode.FROZEN_LATEST);\r\n        this.isVcrActive = ko.pureComputed(() => {\r\n            return this.watchMode() === WatchMode.REVIEW;\r\n        }, this);\r\n        this.getWatchModeClass = ko.pureComputed(() => {\r\n            switch (this.watchMode()) {\r\n                case WatchMode.FROZEN_LATEST:\r\n                    return \"fa-pause-circle\";\r\n                case WatchMode.POLL:\r\n                    return \"fa-eye\";\r\n                case WatchMode.REVIEW:\r\n                    return \"fa-history\";\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    addLog(log: Log) {\r\n        this.logs.push(log);\r\n        if (log.eventType() === \"File.Create\" || log.eventType() === \"File.Edit\") {\r\n            this.code(log.message())\r\n        }\r\n    }\r\n\r\n    // Map CodeStates to event IDs so we can quickly get code? Or playback history to status at each step...\r\n\r\n    loadHistorySelector(event: Event) {\r\n        let selector = this.getSelector(event);\r\n        let editId = 0;\r\n        let optGroup: JQuery<JQuery.Node> = null;\r\n        this.logs()\r\n            .forEach((entry, index) => {\r\n                let formattedDate = prettyPrintDate(entry.clientTimestamp());\r\n                if (optGroup === null || optGroup.attr(\"label\") != formattedDate) {\r\n                    optGroup = $(\"<optgroup></optgroup>\");\r\n                    optGroup.attr(\"label\", formattedDate);\r\n                    selector.append(optGroup);\r\n                }\r\n                let eventType = REMAP_EVENT_TYPES[entry.eventType()] || entry.eventType();\r\n                let displayed = prettyPrintTime(entry.clientTimestamp()) +\" - \"+eventType;\r\n                let option = $(\"<option></option>\", {text: displayed});\r\n                option.attr(\"value\", editId);\r\n                editId += 1;\r\n                optGroup.append(option);\r\n            });\r\n        selector.val(Math.max(0, editId-1));\r\n        selector.on(\"change\", (event: Event) => {\r\n            this.viewLog(event);\r\n        });\r\n    }\r\n\r\n    viewLog(event: Event) {\r\n        let currentId = parseInt(<string>this.getSelector(event).val(), 10);\r\n        let log = this.logs()[currentId];\r\n        if (log.isEditEvent()) {\r\n            this.code(log.message());\r\n        }\r\n    }\r\n\r\n    switchWatchMode(data: any, event: Event) {\r\n        switch (this.watchMode()) {\r\n            case WatchMode.FROZEN_LATEST:\r\n                this.watchMode(WatchMode.POLL);\r\n                break;\r\n            case WatchMode.POLL:\r\n                this.loadHistorySelector(event);\r\n                this.watchMode(WatchMode.REVIEW);\r\n                break;\r\n            case WatchMode.REVIEW:\r\n                this.watchMode(WatchMode.FROZEN_LATEST);\r\n                break;\r\n        }\r\n    }\r\n\r\n    getSelector(event: Event) {\r\n        return $(event.target).closest(\"div\").find(\".history-select\");\r\n    }\r\n\r\n    moveToMostRecent(data: any, event: Event) {\r\n        this.getSelector(event).val(this.logs().length-1);\r\n        this.viewLog(event);\r\n    }\r\n\r\n    moveToBack(data: any, event: Event) {\r\n        let currentId = parseInt(<string>this.getSelector(event).val(), 10);\r\n        this.getSelector(event).val(Math.max(0, currentId-1));\r\n        this.viewLog(event);\r\n    }\r\n\r\n    seekToBack(data: any, event: Event) {\r\n        let currentId = parseInt(<string>this.getSelector(event).val(), 10);\r\n        let log;\r\n        do {\r\n            currentId -= 1;\r\n            log = this.logs()[currentId];\r\n        } while (currentId>0 && !log.isEditEvent());\r\n        this.getSelector(event).val(Math.max(0, currentId));\r\n        this.viewLog(event);\r\n    }\r\n\r\n    moveToNext(data: any, event: Event) {\r\n        let currentId = parseInt(<string>this.getSelector(event).val(), 10);\r\n        this.getSelector(event).val(Math.min(this.logs().length-1, currentId+1));\r\n        this.viewLog(event);\r\n    }\r\n\r\n    seekToNext(data: any, event: Event) {\r\n        let currentId = parseInt(<string>this.getSelector(event).val(), 10);\r\n        let log;\r\n        do {\r\n            currentId += 1;\r\n            log = this.logs()[currentId];\r\n        } while (currentId<this.logs().length-1 && !log.isEditEvent());\r\n        this.getSelector(event).val(Math.min(this.logs().length-1, currentId));\r\n        this.viewLog(event);\r\n    }\r\n\r\n    moveToStart(data: any, event: Event) {\r\n        this.getSelector(event).val(0);\r\n        this.viewLog(event);\r\n    }\r\n}\r\n\r\nexport const SubmissionHistoryCard = `\r\n<div class=\"card\">\r\n    <span>Started, Edited, Ran, Completed</span>\r\n    <span data-bind=\"component: {name: 'user-short', params: user}\"></span>\r\n    <span data-bind=\"component: {name: 'assignment-short', params: assignment}\"></span>\r\n    <div data-bind=\"codemirror: {\r\n        mode: 'python',\r\n        value: code,\r\n        lineNumbers: true,\r\n        readOnly: true\r\n    }\"></div>\r\n</div>\r\n`;\r\n\r\nko.components.register(\"submission-history-card\", {\r\n    template: SubmissionHistoryCard\r\n});\r\n\r\nexport const SubmissionHistoryVCR = `\r\n<div class=\"col-md-12\" data-bind=\"visible: $parent.isVcrActive()\">\r\n    <form class=\"form-inline\">\r\n        <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n            data-bind=\"click: $parent.moveToStart.bind($parent)\">\r\n            <span class='fas fa-step-backward'></span> Start\r\n        </button>\r\n        <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n            data-bind=\"click: $parent.seekToBack.bind($parent)\">\r\n            <span class='fas fa-fast-backward'></span>\r\n        </button>\r\n        <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n            data-bind=\"click: $parent.moveToBack.bind($parent)\">\r\n            <span class='fas fa-backward'></span> Back\r\n        </button>\r\n        <select class=\"history-select form-control custom-select mr-2 custom-select-sm\" aria-title=\"History Selector\">\r\n        </select>\r\n        <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n            data-bind=\"click: $parent.moveToNext.bind($parent)\">\r\n            <span class='fas fa-forward'></span> Next\r\n        </button>\r\n        <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n            data-bind=\"click: $parent.seekToNext.bind($parent)\">\r\n            <span class='fas fa-fast-forward'></span>\r\n        </button>\r\n        <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\"\r\n            data-bind=\"click: $parent.moveToMostRecent.bind($parent)\">\r\n            <span class='fas fa-step-forward'></span> Most Recent\r\n        </button>\r\n    </form>\r\n</div>\r\n`;\r\n\r\nko.components.register(\"submission-history-vcr\", {\r\n    template: SubmissionHistoryVCR\r\n});\r\n\r\nexport enum WatchGroupingMode {\r\n    NONE, ASSIGNMENT, USER\r\n}\r\n\r\n\r\nexport class Watcher {\r\n    // Search options\r\n    courseId: KnockoutObservable<number>;\r\n    assignmentIds: KnockoutObservableArray<number>;\r\n    userIds: KnockoutObservableArray<number>;\r\n\r\n    // Stores\r\n    userStore: UserStore;\r\n    assignmentStore: AssignmentStore;\r\n\r\n    // Actual data\r\n    logs: KnockoutObservableArray<Log>;\r\n    submissions: KnockoutObservableArray<SubmissionHistory>;\r\n    cauToSubmission: { [cau: string]: SubmissionHistory};\r\n\r\n    // Cosmetics\r\n    grouping: KnockoutObservable<WatchGroupingMode>;\r\n\r\n\r\n    constructor(data: any) {\r\n        this.courseId = ko.observable<number>(data.courseId);\r\n        this.assignmentIds = ko.observableArray<number>(data.assignmentIds);\r\n        this.userIds = ko.observableArray<number>(data.userIds);\r\n        this.grouping = ko.observable<WatchGroupingMode>(WatchGroupingMode.NONE);\r\n        this.logs = ko.observableArray<Log>([]);\r\n        this.submissions = ko.observableArray<SubmissionHistory>([]);\r\n        this.cauToSubmission = {};\r\n        this.userStore = new UserStore(data.courseId[0]);\r\n        this.assignmentStore = new AssignmentStore(data.courseId[0]);\r\n        $(this.getLatest.bind(this));\r\n    }\r\n\r\n    addLog(log: Log) {\r\n        this.logs.push(log);\r\n        let submissionId = log.getAsSubmissionKey();\r\n        let submission = this.cauToSubmission[submissionId];\r\n        if (submission === undefined) {\r\n            let user = this.userStore.getInstance(log.subjectId());\r\n            let assignment = this.assignmentStore.getInstance(log.assignmentId());\r\n            submission = this.cauToSubmission[submissionId] = new SubmissionHistory(log, user, assignment);\r\n            this.submissions.push(submission);\r\n        }\r\n        submission.addLog(log);\r\n   }\r\n\r\n    addLogs(logs: LogJson[]) {\r\n        let userIds = [... new Set(logs.map((log: LogJson) => log.subject_id))];\r\n        this.userStore.getInstances(userIds);\r\n        logs.forEach((log: LogJson) => this.addLog(new Log(log)));\r\n    }\r\n\r\n    getLatest() {\r\n        ajax_get(\"blockpy/load_history\", {\r\n            assignment_id: this.assignmentIds()[0],\r\n            course_id: this.courseId(),\r\n            //user_id: this.userIds()[0],\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                this.addLogs(data.history);\r\n            } else {\r\n                console.error(data);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const WatcherTemplate = `\r\n    <div>\r\n        <div data-bind=\"foreach: submissions\">\r\n            <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n                data-bind=\"click: switchWatchMode\">\r\n                <span class='fas' data-bind=\"class: getWatchModeClass\"></span>\r\n            </button>\r\n            <submission-history-vcr></submission-history-vcr>\r\n            <submission-history-card params=\"code: code, user: user, assignment: assignment\"></submission-history-card>\r\n        </div>\r\n        <div data-bind=\"foreach: logs\">\r\n            <span style='border: 1px solid black;' data-bind=\"text: eventType\"></span>\r\n        </div>\r\n    </div>\r\n`;\r\n\r\nko.components.register(\"watcher\", {\r\n    viewModel: Watcher,\r\n    template: WatcherTemplate\r\n});\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(154);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}